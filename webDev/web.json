{"posts":[{"file":"24_10_2022-dbAssignment1.md","date":"24/10/2022","title":"# Database Assignment","content":"<p>Last week I looked over a few ideas to get into the assignment for Web Dev, which has me creating a database set up for a specific purpose and then fill it so I can access it through SQL statements. In my last post, I talked about learning to use SQL and the syntax involved with getting data. This week, I figured out what I am doing the assignment about and started making an ER diagram to show the relationships with each table.</p>\n<p>After having a look at a few things that interest me and that I could create a database for, a few ideas stood out. I could make a database for movies, or games, or maybe parts of a game. I decided that I would, in the end, make a database for all Call of Duty: Black Ops II weapons. I knew this would be a cool idea, as I do enjoy the game and I used to play it enough to get the hang of things.</p>\n<p>Sidenote: For the past week I haven't had access to my own computer which made it difficult to get some things done, luckily making an ER diagram doesn't require too much and I could use Lucidchart to create it. The sad thing is, I forgot to save it somewhere and now it's gone.</p>\n<p>I got through the ER diagram hooking each table up to each other, and forgetting to put the signals for many to many relationships or one to many etc. I plan on remaking the ER diagram this week as it is a crucial part of the assignment and will pave the path of making the database instead of just winging it and hoping for the best. I plan also on having a few conversations with classmates so that I am able to bounce some ideas back and forth and improve my ideas, and even help them with their ideas.</p>","preview":"<p>Last week I looked over a few ideas to get into the assignment for Web Dev, which has me creating a database set up for a specific purpose and then fill it so I can access it through SQL statements. In my last post, I talked about learning to use SQL and the syntax involved with getting data. This week, I figured out what I am doing the assignment about and started making an ER diagram to show the relationships with each table.</p>\n<p>After having a look at a few things that interest me an","id":"dbAssignment1"},{"file":"17_10_2022-sql_databases.md","date":"17/10/2022","title":"# SQL Databases","content":"<p>Over the past week, I had a look into further understanding SQL syntax and concepts using the Grok course provided and a small tutorial of creating a database through sql to get the main gist of using SQL statements and databases. I spent a majority of the time running through the grok course where I got a basic understanding of using the <code>SELECT</code>, <code>FROM</code>, <code>WHERE</code> and <code>ORDER BY</code> statements. In the tutorial, I was able to also get an understanding of using statements such as <code>DROP TABLE IF EXISTS</code>, <code>CREATE TABLE</code> and <code>INSERT INTO [TABLE_NAME] VALUES</code> as well as setting up primary and foreign keys.</p>\n<p>Lets start from the beginning. I started off the week on Grok looking back through the basic syntax of SQL and how to make queries. The syntax looks a bit like this:</p>\n<ul>\n<li><code>SELECT [COLUMN|*] FROM [TABLE] WHERE [COLUMN] [=|&gt;|&gt;=|&lt;|&lt;=|!=] [VALUE] ORDER BY [COLUMN] [ASC|DESC]</code> - Where the query is only through one table</li>\n<li><code>SELECT [COLUMN|*] FROM [TABLE] JOIN [OTHER_TABLE] ON [OTHER_TABLE.ID] = [TABLE.ID] WHERE [COLUMN] [=|&gt;|&gt;=|&lt;|&lt;=|!=] [VALUE] ORDER BY [COLUMN] [ASC|DESC]</code> - Where the query is between multiple tables (It doesn't have to be the ID's but can be any Primary Key column where they match up)</li>\n</ul>\n<p>That's a lot to work with, so let's break it down with each key word:</p>\n<ul>\n<li><code>SELECT [COLUMN|*]</code> - Select a specific (or every) column from a specified table</li>\n<li><code>FROM [TABLE]</code> - Specify the table/s that the column/s are coming from</li>\n<li><code>WHERE [COLUMN] [=|&gt;|&gt;=|&lt;|&lt;=|!=] [VALUE]</code> - Only select the entries where the specific column meets a specific condition</li>\n<li><code>ORDER BY [COLUMN] [ASC|DESC]</code> - Order the outputted table by a column either ascending or descending</li>\n<li><code>JOIN [OTHER_TABLE] ON [OTHER_TABLE.ID] = [TABLE.ID]</code> - Join two tables together on a specific column that will match up. The two tables will be joined where the IDs are the same - Frequently used with association tables as well, where MANY to MANY relationships cannot be used</li>\n</ul>\n<p>This allows for a lot of different queries to be made on a database to get the information that you want. I used this information to create some queries for the database I had to create in the short tutorial.</p>\n<p>The short tutorial ran through creating tables and adding values into it. The tutorial went through using <code>DROP TABLE IF EXISTS</code>, <code>CREATE TABLE</code> and <code>INSERT INTO [TABLE] VALUES</code> so that I could make a database for the queries. To show how I created the table, it looked something along these lines:</p>\n<pre><code class=\"sql language-sql\">-- Delete and Classes\nDROP TABLE IF EXISTS Classes;\n-- Create Classes\nCREATE TABLE Classes \n(   ID INTEGER PRIMARY KEY AUTOINCREMENT,\n    Name TEXT,\n    Teacher INTEGER,\n        FOREIGN KEY (Teacher) REFERENCES Teachers(ID)\n);\n\n-- Add data into classes\nINSERT INTO Classes VALUES (null, 'Math', 2);\nINSERT INTO Classes VALUES (null, 'English', 4);\nINSERT INTO Classes VALUES (null, 'Science', 3);\n</code></pre>\n<p>After running it, the db file was created with the Classes table and had the ID as it's primary key to be referenced from other tables, and the Teacher which had a foreign key to get the Teacher data from the Teacher table.</p>\n<p>This week I got a lot done, with running through the GROK course, to running through the short tutorial to create a database, I learnt a lot on how to use databases correctly. I used the time effectively, as I got all the work done and got a bit of a start on my assignment with ideating, but also got into a few conversations with people which didn't have me on task all the time, but was probably a good thing as it can be nice to get my mind off the work at times. I will continue to use these skills in the upcoming weeks on creating a database for my assignment to the best of my ability.</p>\n<p>The SQL Files for this can be found at <a href=\"./learning/SQL/school.sql\">school.sql</a> and <a href=\"./learning/SQL/school_queries.sql\">school_queries.sql</a></p>","preview":"<p>Over the past week, I had a look into further understanding SQL syntax and concepts using the Grok course provided and a small tutorial of creating a database through sql to get the main gist of using SQL statements and databases. I spent a majority of the time running through the grok course where I got a basic understanding of using the <code>SELECT</code>, <code>FROM</code>, <code>WHERE</code> and <code>ORDER BY</code> statements. In the tutorial, I was able to also get an understanding","id":"sql_databases"},{"file":"19_09_2022-sql0.md","date":"19/09/2022","title":"# Intro to SQL","content":"<p>Last week acted as more of a refresher of SQL as opposed to an introduction. A few years ago I had an introduction into SQL by another teacher, learning about relational databases and SQL syntax, all in the context of MS Access. This time, I won't be using MS Access, but instead, SQLite.</p>\n<p>I started off by looking through the document that was left for us outlining what I needed to go through so as to re-familiarise myself with SQL. I went through a Grok tutorial on an intro to SQL and learnt about the syntax and keywords. The keywords that we looked over in the tutorial, or at least where I got up to was the <code>SELECT</code>, <code>FROM</code> and <code>WHERE</code> statements. The statements are used as follows:</p>\n<ul>\n<li><p><code>SELECT</code> - Select a specific column from the specified table</p></li>\n<li><p><code>FROM</code> - Specify the table that the information is getting read from</p></li>\n<li><p><code>Where</code> - Filter out results to get only the data points that meet the specified conditions</p></li>\n</ul>\n<p>The lesson on Grok takes a while but is definitely worth it due to the repetitiveness sticking the syntax into your head. Even though I haven't looked at it since last week, I remember the syntax clearly as I had to repeat many times.</p>\n<p>I spent the time working through the intro on Grok and talking about the concepts with Michael, especially when I hit any issues, such as the fact that there is a concept in the SQL syntax where <code>''</code> is not <code>\"\"</code>, as you can specify the <code>where</code> a specific attribute is <code>\"X\"</code> or <code>'x'</code>, but using <code>\"\"</code> will result in the program attempting to find a table instead of an attribute, as the correct syntax uses <code>''</code>. All the issues I ran into and the conversations I had with my peers allowed me to grow and view problems from different POVs, which allowed me to see problems differently in the future and look at different work-arounds for issues.</p>","preview":"<p>Last week acted as more of a refresher of SQL as opposed to an introduction. A few years ago I had an introduction into SQL by another teacher, learning about relational databases and SQL syntax, all in the context of MS Access. This time, I won't be using MS Access, but instead, SQLite.</p>\n<p>I started off by looking through the document that was left for us outlining what I needed to go through so as to re-familiarise myself with SQL. I went through a Grok tutorial on an intro to SQL an","id":"sql0"},{"file":"13_09_2022-relationalDB.md","date":"13/09/2022","title":"# Relational Databases","content":"<p>Relational databases are ways of designing databases that alow different parts of the database to work cohesively with one another. This allows for easy access of data points that are all related across different data sets. Last week we looked over how to design a relational database and the ideas behind them that make them so useful.</p>\n<p>With relational databases, you're able to access organised data across tables that all link to each other and provide easy connections to different bits of data whilst minimising duplication of data. The relations between different tables in databases are to do with the primary and foreign keys, where the primary keys are to ensure that each entry is unique so that they can be accessed easily, while a foreign is a column or group of columns that enable a link between two tables, referring to the field that is a primary key of another table.</p>\n<p>On top of that, the relationship between different tables is taken into acount through the cardinality (the number of elements in a set or other grouping) of the relationships. There are 4 types of cardinality in the database relationships, those are one-to-one (1:1), one-to-many (1:N), many-to-one (M:1) and many-to-many (M:N). There is an issue though, M:N relationships aren't actually possible in databases and so another table is needed in the middle for a 1:N and M:1 on each side.</p>\n<p>Within each of these tables there are different attributes that hold the data specified, having TEXT, NUMBERS and OTHER as follows:</p>\n<ul>\n<li><p>Text:</p>\n<ul>\n<li>CHAR(length) - Fills up to the length amount with characters, if unspecified, it will be filled with spaces</li>\n<li>VARCHAR(length) - Takes up only as much space as needed with a maximum length specified</li>\n<li>TEXT - Can contain text, any amount even up to gigabytes</li></ul></li>\n<li><p>Numbers:</p>\n<ul>\n<li>INT - Positive or negative whole number</li>\n<li>FLOAT, DOUBLE - Floating point numbers, double allowing for longer decimals</li></ul></li>\n<li><p>Other:</p>\n<ul>\n<li>BLOB - Binary data such as files</li>\n<li>INET - IP Addresses</li></ul></li>\n</ul>\n<p>There is definetely more I can talk about and I could go further in depth, but due to the fact that this is already late, I will leave it at that. I will continue next week to go into SQL and hopefully catch up on the work that I need to be doing so that I am not too far behind by the next assessment and will be able to have the skills needed to do the tasks that have been assigned without too much struggle. As stated, I did fall behind a little bit in last week as I was feeling quite demotivated a few days which made it difficult to get into a groove and continue on with the work, but I should be able to bounce back this week and get it all done.</p>","preview":"<p>Relational databases are ways of designing databases that alow different parts of the database to work cohesively with one another. This allows for easy access of data points that are all related across different data sets. Last week we looked over how to design a relational database and the ideas behind them that make them so useful.</p>\n<p>With relational databases, you're able to access organised data across tables that all link to each other and provide easy connections to different bi","id":"relationalDB"},{"file":"05_09_2022-updatedBlog.md","date":"05/09/2022","title":"# Updating the Blog Page and Local Storage","content":"<p>Last week I rewrote my entire github site that you're reading this post on as well as having a look into local storage, which was a bit of a refresher from when I used it in the assessment piece for last semester.</p>\n<p>The major part of the week was spent writing the HTML, CSS and JavaScript to get the blog pages to look more organised and easier to navigate as well as being a bit more advanced. There were a few ideas for the methods to convert the old blog to the new one, as the previous versions were all stored in a single markdown file that was structured consistently, which was quite helpful. The structure looked a bit along the lines of:</p>\n<pre><code class=\"md language-md\"># &lt;Title&gt;\n## &lt;Subject&gt;\n### &lt;Date&gt;\n\n&lt;Content&gt;\n</code></pre>\n<p>This made it easier to split the file into multiple files as it was a consistent structure to split the page by. The way I split the page was by reading through the file and finding all parts that had <code>\\n#</code> to grab each singular post (That is it splits at the title of each post).</p>\n<p>From there I took in another file that was created which was formatted as a markdown file that showed the file tree of where I wanted each file to be and how they were to be named. I used python to take each line of the file and figure out what the file was based on the heading (indentation was visible but unused in the python script). This would find the name I wanted to use and create a new file for it. Once the file was created, it was written to with the matching post found by the date which was done using the following method:</p>\n<pre><code class=\"py language-py\">for dir in md:\n    dir=dir.strip()\n    # Change directory prefix to create file based on 'directory' parent\n    if dir == \"data:\":\n        pre = \"./dataScience/\"\n        continue\n    elif dir == \"web:\":\n        pre = \"./webDev/\"\n        continue\n    elif not \".md\" in dir:\n        continue\n    # Create the file and write the post to the file\n    with open(\"%s%s\" %(pre, dir), \"w\") as newFile:\n        # Go through each available post\n        for part in x:\n            # Get the correct post by date on post\n            h3 = (\"### %s\"% (dir.split(\"2022-\")[0] + \"2022\"))\n            if h3.replace(\"_\",\"/\") in part:\n                # Write the post to the file without the tag\n                newFile.write(\"# \" + part.split(\"&gt;&lt;/a&gt;\")[1].strip())\n                # Remove post from set of posts and continue to next date\n                # (The top post is the Data Science post in format)\n                x.pop(x.index(part))\n                break\n</code></pre>\n<p>I was then able to save each of the different files and create another script that was used to create a JSON file based on all of the new markdown files created that held each of the posts which took all of the markdown files in the folder and took key parts of the file (e.g. date, title, content (using an external library called showdown to convert markdown to html) and id) and pushed them to an object where the dates were sorted by time since EPOCH in milliseconds to provide accurate sorting (although I had to format the dates so that they were in the american format of mm/dd/yyyy so that it would process correctly) which was then pushed to a JSON file to be read by the JS files attached to the web pages.</p>\n<pre><code class=\"js language-js\">export function createObj(path) {\n    const dir = fs.readdirSync(path, \"utf-8\")\n    /** @type {{posts: {title: string, date: string, content: string, id:string}[]}} */\n    let obj = {\n        posts: []\n    }\n    for (let file of dir) {\n        if (!file.includes(\".md\")) continue\n\n        let date = file.split(\"-\")[0].replaceAll(\"_\", \"/\")\n\n        let all = fs.readFileSync(`${path}/${file}`)\n\n        let title = all.toString()\n            .split(\"\\n\")[0]\n            .replace(\"\\r\", \"\")\n\n        let content = all.toString()\n            .split(\"\\n\")\n            .slice(4)\n            .join(\"\\n\")\n            .replaceAll(\"\\r\", \"\")\n\n\n        content = new Showdown.Converter().makeHtml(content)\n        let preview = content.slice(0, 497).replaceAll(/&lt;img src=\"(.*)\".*\\/?&gt;/gm, '&lt;br&gt;&lt;a href=\"$1\"&gt;&lt;i&gt;Image&lt;/i&gt;&lt;/a&gt;')\n\n        date = dateFormat(date)\n\n        obj.posts.push({ file, date, title, content, preview, id: file.split(\"-\")[1].replace(\".md\", \"\") })\n    }\n\n    obj.posts.sort((a, b) =&gt; new Date(b.date).getTime() - new Date(a.date).getTime())\n\n    for (let post of obj.posts) {\n        post.date = dateFormat(post.date)\n    }\n\n    return obj\n}\n\nfunction dateFormat (date) {\n    const [dd, mm, yyyy] = date.split(\"/\")\n    return `${mm}/${dd}/${yyyy}`\n}\n</code></pre>\n<p>This provided enough to get the process running smoothly as I setup a github action to run the JS file which updated the JSON files and recommitted it, running into some small issues, where if nothing changed it would error out, but there was a quick work around to not run it if it will error with the <code>|| true</code>:</p>\n<pre><code class=\"yml language-yml\">    git add -A || true\n    git commit -m \"Update JSON\" || true\n    git push || true\n</code></pre>\n<p>Overall I feel that I was highly productive in the non-useful parts of the class, where I was meant to be focusing on Local Storage, but ended up rewriting my entire blog site to be more aesthetically pleasing and easier to navigate. On the plus side I was also already slightly familiar with using local storage as said, due to using it in the first assignment where I created a website last semester and used local storage thanks to Michael's ideas and help with the understanding of the concept and applications.</p>\n<p>I did, though, run through the tutorial that was assigned to us to complete and got it <em>partially</em> working… I got the main gist of it working, except I was having trouble with the updating of some elements as we took a script from a tutorial and tried to change the normal JS into JQuery, which slightly failed.</p>\n<p>In retrospect I could have been using my time for the purpose of understanding more about local storage, but I believe I have benefitted myself more by rewriting the page and understanding new methods to use JS, Python and HTML to get a fully functioning website that was transformed from a single-paged blog into a multi-paged site that shows all posts, including the most recent in itself. I have developed my skills in problem solving, ideating and collaboration with peers while creating this page which will have further helped with my future of I.T. as especially with collaboration with others, I am able to have others there who I can collaborate with to create fully functioning applications with real uses as I have done before with Michael and continue to do.</p>","preview":"<p>Last week I rewrote my entire github site that you're reading this post on as well as having a look into local storage, which was a bit of a refresher from when I used it in the assessment piece for last semester.</p>\n<p>The major part of the week was spent writing the HTML, CSS and JavaScript to get the blog pages to look more organised and easier to navigate as well as being a bit more advanced. There were a few ideas for the methods to convert the old blog to the new one, as the previou","id":"updatedBlog"},{"file":"29_08_2022-examUX.md","date":"29/08/2022","title":"# Exam - UX","content":"<p>Last week not much happened, so I have not much to talk about as no classes were help (except for the Monday) and I had exams, although I can also talk about some other study into UX that I also had to study for the exam as I was a little bit behind on the classwork.</p>\n<p>The focus of the week was on UX a.k.a. User Experience, and how that directly influences how successful the page can be. To keep it simple, there are 8 rules of UX that need to be followed to create a decent website, those being:</p>\n<ul>\n<li>Strive for consistency - Keep the pages/style consistent</li>\n<li>Seek universal usability - Allow accessibility from everyone</li>\n<li>Offer informative feedback - Give feedback on what's happening</li>\n<li>Design dialogs to yield closure - Make sure the user knows exactly what's happening on the page</li>\n<li>Offer simple error handling - If there's an error, make sure it is easily readable and understandable</li>\n<li>Permit easy reversal of actions - Making mistakes happen, don't make people stress by not allowing a mistake to be reversed</li>\n<li>Keep users in control - Make sure the users are in control at all times</li>\n<li>Reduce short-term memory load - Keep it minimalistic at times, no need to overload the brain</li>\n</ul>\n<p>These rules to UX were also in the exam, where I needed to talk about the use of these in the success of websites, specifically in relation to LINGsCARS and the CSS Zen Garden, which took two completely different approaches to creating a website and the effects created were substantially different, although attacking certain parts of the UX similarly. The analysis of the sites used my previous understanding of how web pages are created and the effect it has on the interpretation of the page. I concluded that the UX does have an effect on how well the site performs but is not the entirety of what makes a page successful.</p>\n<p>This week on the other hand I am looking into local storage, where I will continue to develop my understanding to the point of knowing it like second nature, but also the plan is not to overload myself with schoolwork and give myself a bit of time to just do what I'd like and keep a bit of a balanced life as sometimes it just gets too overwhelming, so I need a minute to stop and just do what I enjoy.</p>","preview":"<p>Last week not much happened, so I have not much to talk about as no classes were help (except for the Monday) and I had exams, although I can also talk about some other study into UX that I also had to study for the exam as I was a little bit behind on the classwork.</p>\n<p>The focus of the week was on UX a.k.a. User Experience, and how that directly influences how successful the page can be. To keep it simple, there are 8 rules of UX that need to be followed to create a decent website, th","id":"examUX"},{"file":"21_08_2022-JQuery2.md","date":"21/08/2022","title":"# JQuery - Part 3 - Ajax","content":"<p>Over the past 2 weeks I was looking over JQuery and it's uses in Web Dev. On that topic, I also heard about something called AJAX for the first time, which stands for Asynchronous JavaScript and XML. Ajax is used for sending requests to a server to get external data without reloading a page, such as a seperate file. This is frequently used in social media sites such as twitter which sends a request back to the servers every so often to look for unread notifications.</p>\n<p>For example, in the seperate JS file that was discussed in the previous post, I used events with selectors to fire functions, this example looked like this:</p>\n<pre><code class=\"js language-js\">$(\"#ajax\").on(\"click\", function(){\n    $.ajax({ url:\"js/text.txt\", success:function(result){\n        $(\"#ajax\").text(result)\n    }})\n})\n</code></pre>\n<p>The function uses a button, which when clicked fires a function that uses ajax to GET a file in the directory 'text.txt'. This is then used to update the text of the button to the text in the txt file.</p>\n<p>Prior to using AJAX here, I watched a few videos on what AJAX is and how to use it which were extremely useful in understanding and using AJAX on my own, the only issue I ran into was a CORS error, or a Cross Origin Resource Sharing error, which stopped me from remotely accessing other sites without any authentication, which is completely reasonable for security purposes. I'm not going to go over CORS here though, so if you want to know more, Google is a friend.</p>\n<p>I was happy that I got through all of that last week, and also started looking into UX, but not enough to write about just yet, I'll make sure to get through it all so that I can make a post about it here for next week though.</p>\n<p>All went well in the week, most things got done, and although I am slightly behind as I haven't done all the UX tasks, I feel happy that I have gotten to the point I'm at now, and motivated to continue going through the rest of the resources so that I'm prepared for the mid-term exam I have this week.</p>","preview":"<p>Over the past 2 weeks I was looking over JQuery and it's uses in Web Dev. On that topic, I also heard about something called AJAX for the first time, which stands for Asynchronous JavaScript and XML. Ajax is used for sending requests to a server to get external data without reloading a page, such as a seperate file. This is frequently used in social media sites such as twitter which sends a request back to the servers every so often to look for unread notifications.</p>\n<p>For example, in ","id":"JQuery2"},{"file":"15_08_2022-JQuery1.md","date":"15/08/2022","title":"# JQuery - Part 2","content":"<p>Building on the previous week, last week I was able to continue going over JQuery, figuring out the ins and outs of JQuery and the useful ways of implementing it. As stated last time, I have been going through a tutorial to get to develop my understanding of JQuery, although I'm falling slightly behind but have been figuring out ways of giving myself more time so that outside of class I am able to continue working on class work and getting the tasks I need to finish, completed.</p>\n<p>This week I was able to continue going through the tutorial building on previous knowledge. I made the decision to move the JavaScript into its own js file and import it into the html file using a <code>&lt;script&gt;</code> tag and then continue to run through it all in an easier-to-read way. The different things I learnt in the tutorial were placed into the js file and code commented to show my understanding, and then displayed in an html file. The new JQuery that I worked through can be seen here with comments that explain what they do:</p>\n<pre><code class=\"js language-js\">// text() reads or writes the text inside of an element\nvar text = $(\"#datElement\").text();\n$(\"#datElement\").text(\"It Do Be Dat Element\");\n\n// html() does the same as text() except also uses html instead of just text\nvar html = $(\"#datElement\").html();\n$(\"#datElement\").html(\"&lt;h1&gt;It Do Be Dat Element&lt;/h1&gt;\");\n\n// val() gets and sets the values of form fields.\nvar val = $(\"#dataElement\").val();\n$(\"#dataElement\").val(\"Insert Answer Here\");\n\n// attr() gets and sets specific attribute values\nvar attrVal = $(\"#anotherElement\").attr(\"height\");\n$(\"#anotherElement\").attr({ height: 25 });\n\n// prepend() adds new html to the beginning of the element and append() adds new html to the end\n$(\"#theElement\").prepend(\"New HTML | Prepend\");\n$(\"#theElement\").append(\"New HTML | Append\");\n\n// before() and after() inserts HTML before/after the selected element\n$(\"#theElement\").before(\"Inserter Before\");\n$(\"#theElement\").after(\"Inserted After\");\n\n// insertBefore() and insertAfter() will move a html element before or after the selection\n$(\"#thisElement\").insertBefore(\"#secondElement\");\n$(\"#thisElement2\").insertAfter(\"#thirdElement\");\n\n// wrap() wraps the selected html in another html element\n$(\"#wrappedHtml\").wrap(\"&lt;div style='border: 1px solid black;'&gt;&lt;/div&gt;\");\n\n// replaceWith() replaces the selected element with new HTML\n$(\"#replaceThis\").replaceWith(\"&lt;div style='border: 1px solid black;'&gt;&lt;/div&gt;\");\n// You could also move the selection into the replacement e.g. putting it into a div:\n$(\"#replaceThis\").replaceWith(\"&lt;div style='border: 1px solid black;'&gt;\" + $(\"#replaceThis\").html() + \"&lt;/div&gt;\");\n\n// replaceAll() is like replaceWith() with backwards syntax\n$('&lt;div style=\"border: 1px solid black\"&gt;&lt;/div&gt;').replaceAll(\"#replaceThis\");\n\n// remove() deletes an element\n$('#removeThis').remove();\n\n// empty() removes all children of the element\n$(\"#emptyThis\").empty();\n\n// clone() clones the selected element to be inserted somewhere else\nvar clone = $(\"#cloneThis\").clone();\nclone.insertBefore(\"thisElement\");\n// Clone event handlers and data with true parameter\nvar clone = $(\"#cloneThis\").clone(true);\nclone.insertBefore(\"thisElement\");\n\n// JQuery events\n\n// Mouse events\n\n// On Click\n$(\"#theDiv\").on(\"click\", function () {\n    alert(\"div clicked\");\n})\n\n// Double Click\n$(\"div\").on(\"dblclick\", function () {\n    alert(\"div double clicked.\")\n})\n\n// Mouse enter and leave\n$('#enterDiv').on(\"mouseenter\", function () {\n    alert(\"div entered\")\n})\n$(\"#leaveDiv\").on(\"mouseleave\", function () {\n    alert(\"I asked nicely, why you gotta be so mean?...\")\n})\n// mousein() and mouseout() are similar to the mouseenter() and mouseleave() except they also fire for all children\n\n// Mouse down and up (clicking)\n$(\"#mouseupdown\").on(\"mousedown\", function () {\n    alert(\"mouse went down\")\n})\n$(\"#mouseupdown\").on(\"mouseup\", function () {\n    alert(\"mouse went up\")\n})\n\n// Mouse moved\n$(\"#theDiv\").on(\"mousemove\", function () {\n    alert(\"mouse moved here\")\n})\n\n// Toggle shows or hides elements\n$(\"#toggleButton\").on(\"click\", function(){$(\"#toggleThingy\").toggle(400)})\n</code></pre>\n<p>The snippet shows the different components that can be selected from the elements and how they can be read or written to as well as the different events that can be triggered to perform specified functions. There has been a lot that I've learnt over the course of the week in web dev as I took a decent amount of time to focus on it, and didn't get much done in data science as a result. This is something that I need to improve on as it will be a limiting factor in my future if I wasnt to continue down this route. If I go into uni I need to know how to manage my time well and it's a difficult thing to learn, as even after all these years in school, I'm still not the greatest at managing my time. The week has also enforced something I learnt a while ago, which is that when you get into the zone, you can get a lot done, and I got into that zone in one of the classes this week, where I could feel that I was really being productive which was better than other lessons. My plan for this upcoming week is to continue dividing up my time better in the two courses and get things done in both that I need to get done so that I can advance through the rest of the course at the same speed for both courses.</p>","preview":"<p>Building on the previous week, last week I was able to continue going over JQuery, figuring out the ins and outs of JQuery and the useful ways of implementing it. As stated last time, I have been going through a tutorial to get to develop my understanding of JQuery, although I'm falling slightly behind but have been figuring out ways of giving myself more time so that outside of class I am able to continue working on class work and getting the tasks I need to finish, completed.</p>\n<p>This","id":"JQuery1"},{"file":"08_08_2022-JQuery.md","date":"08/08/2022","title":"# JQuery","content":"<p>JQuery is a JavaScript library that is used to make the normal tasks you would complete in JavaScript that bit easier. This was introduced through a document that led us to a tutorial to run through which allowed us to get the general gist of the library. If you'd like to do the tutorial yourself, you can view it <a href=\"https://jenkov.com/tutorials/jquery/index.html\"><strong>here</strong></a>.</p>\n<p>The tutorial walked over the basics of JQuery, including how to use a selector and using the $(document).ready() which fires when everything on the page is loaded. This can be hooked up to a function to trigger a change of some elements on the document.</p>\n<p>Some of the different JQuery components that were looked at included (Pretty much just selectors):</p>\n<ul>\n<li>$() - Select an element with the conditions that are in the \"()\", this could be (document) to select the document or other.<ul>\n<li>$(\"element\") - Select by element</li>\n<li>$(\"#id\") - Select by ID</li>\n<li>$(\".class\") - Select by class</li>\n<li>$(\"Parent Child\") - Select the specific child of a specific element</li>\n<li>$(\"div\").has(\"p\") - Select all divs that have a p element as a child</li>\n<li>$(\"div\").filter(\".class\") - Grab all divs that have the class specified and then also check the children</li>\n<li>$('div[height=\"200\"]') - Select all div elements where the height is set to 200, if '=\"200\"' is not there, it will grab all that have a height attribute defined.</li></ul></li>\n</ul>\n<p>The last week was good, and posed minimal challenges besides clashing at some points with the data science course in getting work done, but I was still able to get a good understanding of JQuery and a few of the possibilities, which there are a lot more of than I understand at this point. I had not done much collaboration with people throughout the week but instead used the time to focus on just getting the work done and further developing my understanding. Besides that, over the weekend I was able to talk to a family friend about his interests in the I.T. fields, which are close to mine, and we talked about some of the routes I'm taking in school that are hopefully going to set me up in my career in the future. All of the skills I'm learning in Web Dev and Data Science are further developing my thought patterns and understanding of I.T., logical thinking and problem solving which will be crucial for my future in I.T.. These skills will continue to be developed over the coming weeks and years and will hopefully lead me to a point of confidence with my skills.</p>","preview":"<p>JQuery is a JavaScript library that is used to make the normal tasks you would complete in JavaScript that bit easier. This was introduced through a document that led us to a tutorial to run through which allowed us to get the general gist of the library. If you'd like to do the tutorial yourself, you can view it <a href=\"https://jenkov.com/tutorials/jquery/index.html\"><strong>here</strong></a>.</p>\n<p>The tutorial walked over the basics of JQuery, including how to use a selector and using","id":"JQuery"},{"file":"01_08_2022-notMuch1.md","date":"01/08/2022","title":"# Not Much to do with Web Dev (Game dev)","content":"<p>Throughout the week I had not looked into much more to do with web dev as I had completed the work for the 2 weeks that was assigned and was looking into other things. Instead I looked into some concepts that were happening in the other courses, specifically the game dev course.</p>\n<p>The course wasn't directed towards me but instead to a classmate, but I was allowed to sit in, listen, and learn the concepts that were being talked about in game dev. The main concepts talked about were convergent evolution, which is the idea that although many animals grow and evolve as different animals, they still develop similar traits. For example, dolphins and bats both evolved to use echolocation and gorillas and pandas both developed opposable thumbs. This idea became relevant to game design as it shows the evolution of games alongside what else is happening in the world at the time or in other games being made and how similarities develop.</p>\n<p>There was a bit more looked at that I'm not going to go into today, but might have a bit of a reflection on later.</p>\n<p>All in all, the week went by well and I was able to learn a few things while not doing just Web Dev things. I was able to develop my understanding in other areas that I am not studying and ask questions on things I don't fully understand, which I got to do a few times. There wasn't too much to reflect on, besides the fact that I was not the greatest at staying focused while I had not much I needed to do. What I mean is that when I had nothing I <strong>needed</strong> to do there was still some things I could start doing which I ended up not doing. I plan on getting better at that in the future and possibly starting new concepts earlier so that I have plenty of time to get it done, or if I finish it, to ask if there's any extension work available or to listen in to the other courses as I'm just as interested in those as I am in Web Dev.</p>","preview":"<p>Throughout the week I had not looked into much more to do with web dev as I had completed the work for the 2 weeks that was assigned and was looking into other things. Instead I looked into some concepts that were happening in the other courses, specifically the game dev course.</p>\n<p>The course wasn't directed towards me but instead to a classmate, but I was allowed to sit in, listen, and learn the concepts that were being talked about in game dev. The main concepts talked about were con","id":"notMuch1"},{"file":"24_07_2022-cssFrameworks.md","date":"24/07/2022","title":"# CSS Frameworks","content":"<p>In web dev this week I was able to look into some of the things that I should have looked into for the final assessment item of last semester, that being CSS Frameworks. The content that was covered in the week have to do with the different frameworks out there, and three in particular, those being Bootstrap, probably the most well known, Materialize, and Tailwind, which is my personal favourite at the moment.</p>\n<p>CSS Frameworks are libraries that allow for easier, more compliant web designs. There are a lot of different frameworks publicly available, but the 3 that were focused on in class this week were Bootstrap Materialize and Tailwind. The frameworks all have similar classes and components, but some require a bit more work than others.</p>\n<p>Bootstrap is probably the most beginner-friendly of the lot, with a lot of documentation and examples that allow for creation of a simple, responsive and nice looking design. It's one of the most well-known of the tree, or at least I think so, and has enough components to create many variations of designs for a webpage whilst not having to create the designs from scratch.</p>\n<p>Using the latest bootstrap version I was able to create this:</p>\n<p><img src=\"/pictures/dankobs.png\" alt=\"Danko Homepage Bootstrap\" /></p>\n<p>The navbar html looked like this:</p>\n<pre><code class=\"html language-html\">&lt;nav class=\"navbar nav-pills navbar-dark bg-dark sticky-top\"&gt;\n    &lt;div class=\"container-fluid justify-content-start\"&gt;\n        &lt;a class=\"navbar-brand\" href=\"../AI_1/index.html\"&gt;\n            &lt;img src=\"./assets/logo.png\" alt=\"DANKO logo - The store\"&gt;\n        &lt;/a&gt;\n        &lt;a class=\"nav-item nav-link active\" href=\"./index.html\"&gt;Home&lt;/a&gt;\n        &lt;a class=\"nav-item nav-link\" href=\"./products.html\"&gt;Products&lt;/a&gt;\n        &lt;a class=\"nav-item nav-link\" href=\"./quiz.html\"&gt;Take the Quiz!&lt;/a&gt;\n        &lt;a class=\"nav-item nav-link\" href=\"./contact.html\"&gt;Contact Us&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/nav&gt;\n</code></pre>\n<p>This snippet also shows the use of the CSS Frameworks by using classes, and shows the short amount of html that needs to be written that can produce a product that is at a presentable standard.</p>\n<p>After that I looked into Materialize, which has a more relaxed feel to it, and managed to recreate the homepage again, but with this framework.</p>\n<p>The product:</p>\n<p><img src=\"/pictures/DankoMat.png\" alt=\"Danko Homepage Materialize\" /></p>\n<p>The navbar snippet differs from the bootstrap version as it uses different classes and is quite a bit more simple. It was written as follows:</p>\n<pre><code class=\"html language-html\">&lt;nav&gt;\n    &lt;div class=\"nav-wrapper\"&gt;\n        &lt;a href=\"./index.html\" class=\"right brand-logo\"&gt;Danko&amp;reg;&lt;/a&gt;\n        &lt;ul id=\"nav-mobile\" class=\"left\"&gt;\n            &lt;li&gt;&lt;a class=\"nav\" href=\"./index.html\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"./products.html\"&gt;Products&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"./quiz.html\"&gt;Take the Quiz!&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"./contact.html\"&gt;Contact Us&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/div&gt;\n&lt;/nav&gt;\n</code></pre>\n<p>Finally came Tailwind. Tailwind differs significantly from the other two frameworks but also is very similar. Tailwind offers a greater variety of options to choose from as it gives you components that have a lot more flexibility. While in Bootstrap you might have had to use a card and modify it with other classes, in Tailwind you have to create the card yourself and each component within it. There are a few components that Materialize and Bootstrap have that Tailwind doesn't, but the possibilities are there nonetheless.</p>\n<p>The Tailwind version of the page looks a lot different but also required a bit more code to create:</p>\n<p><img src=\"/pictures/DankoTail.png\" alt=\"Danko Hompage Tailwind\" /></p>\n<p>The code:</p>\n<pre><code class=\"html language-html\">&lt;div class=\"inline-block h-min min-w-full align-middle text-white bg-black\"&gt;\n    &lt;a class=\"float-left mx-auto\" href=\"../AI_1/index.html\"&gt;\n        &lt;img class=\"object-contain h-12 w-30\" src=\"./assets/logo.png\" alt=\"DANKO logo - The store\"&gt;\n        &lt;/a&gt;\n    &lt;a class=\"float-left h-full p-2 border-4 border-black hover:border-gray-700 hover:border-dashed\" href=\"./index.html\"&gt;Home&lt;/a&gt;\n    &lt;a class=\"float-left h-full p-2 border-4 border-black hover:border-gray-700 hover:border-dashed\" href=\"./products.html\"&gt;Products&lt;/a&gt;\n    &lt;a class=\"float-left h-full p-2 border-4 border-black hover:border-gray-700 hover:border-dashed\" href=\"./quiz.html\"&gt;Take the Quiz!&lt;/a&gt;\n    &lt;a class=\"float-left h-full p-2 border-4 border-black hover:border-gray-700 hover:border-dashed\" href=\"./contact.html\"&gt;Contact Us&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Looking back over the week I was pretty happy with my basic understanding of the 3 frameworks. My hope in next week is to look further into the applications of the frameworks and even recreate a webpage or just create a whole new one using the frameworks that looks presentable. </p>\n<p>The week ran by well and I used my time effectively to get through each of the CSS frameworks. I was able to push through and recreate each page using each library and then continue to do some explorations of them on my own. Overall I have enjoyed the week and getting to know these libraries as I hadn't understood what they were or how to use them previously. I'm glad that I know of them now, though, as it will hopefully improve the pages that I create in further projects, and bump my confidence in Web Dev.</p>","preview":"<p>In web dev this week I was able to look into some of the things that I should have looked into for the final assessment item of last semester, that being CSS Frameworks. The content that was covered in the week have to do with the different frameworks out there, and three in particular, those being Bootstrap, probably the most well known, Materialize, and Tailwind, which is my personal favourite at the moment.</p>\n<p>CSS Frameworks are libraries that allow for easier, more compliant web de","id":"cssFrameworks"},{"file":"06_06_2022-webDevAssignment2.md","date":"06/06/2022","title":"# Completing the Website","content":"<p>In Web Dev I believed I did well to smash out the assignment in the time I had been given, I mimght have even taken a bit too much time as in the end I started taking away from the Data Science assignment. The end product can be seen <a href=\"./Web Dev Assignment/index.html\">Here</a> and took me a while to make, even though I was a bit more optimised with my efforts.</p>\n<p>In timeline order of the week:</p>\n<ul>\n<li>First, I did the product page, that being the one for the Air Fryer. I got into working out the layout and making it all fit together well, and then adding in the different aspects inside of it. </li>\n<li>Then I made the products page and made it able to dynamically take all of the different products of a JSON and put them into containers on the product page, fitting snugly beside each other, with an accidental gap on the right.</li>\n<li>Next, I created a bunch more 'products' to put into the JSON so that they'd be listed in the products page.</li>\n<li>From there I decided I needed a quiz page, kind of making it a joke, but also adding in functionality that would allow answers to be submitted and compared to the real answers</li>\n<li>Second last, I created the contact page, which has an 'email' box where you specify your email and a message which will be sent to the company, as well as a phone number for calling the company (not a real phone number I don't think.)</li>\n<li>Finally I created an Index page, filled with <code>Lorem ipsum</code> text and a filler image that has [insert image here] points where there would theoretically be an image.</li>\n</ul>\n<p>The whole week went by pretty fast and stressfully, due to having five assessments known to be due all on the next Monday, I was questioning my capability of even getting <strong>one</strong> in… Luckily though I was able to smash out a lot of it over the weekend, and to good measures, as the <em>practically</em> final project can be seen in the hyperlink above.</p>\n<p>My goal was to get the assignment done last week, and I got it done. I enjoyed the process, and the different bits of creativity required to make the site interesting and functional. Reflecting back on it all, I used my web dev time effectively and was able to get a ton of it done over the weekend. This has allowed me to look into the different methods I would be able to use to tackle the small problems and the many bugs I ran into along the way…</p>\n<p>This has been a fun assignment and I am looking forward to looking into more Web Dev stuff next semester, and as usual my goal is to be better with my time, figuring out how to use it efficiently and <strong>STARTING ASSIGNMENTS EARLY</strong>.</p>","preview":"<p>In Web Dev I believed I did well to smash out the assignment in the time I had been given, I mimght have even taken a bit too much time as in the end I started taking away from the Data Science assignment. The end product can be seen <a href=\"./Web Dev Assignment/index.html\">Here</a> and took me a while to make, even though I was a bit more optimised with my efforts.</p>\n<p>In timeline order of the week:</p>\n<ul>\n<li>First, I did the product page, that being the one for the Air Fryer. I go","id":"webDevAssignment2"},{"file":"30_05_2022-webDevAssignment1.md","date":"30/05/2022","title":"# Progressing through the website","content":"<p>This past week I have been progressing through the assignment at a decent rate, getting through some of the major parts of the assignment, and starting on others. The parts I have done so far are the Wireframe, showing the basic layout of the webpage, and <em>almost</em> the Sitemap, which will show how all the different pages on the site will connect to each other. Finally I have chipped into the creation of the actual pages and am at the point where I almost have the product page completed, besides finding a color palette which would work for the site and be a bit easy on the eyes.</p>\n<p>The Wireframe was probably one of the easiest parts of the process, requiring me to create some ideas that would lead to a useful and informative product page that was organised, informative and not hard to look at. This was done through another site called <a href=\"https://wireframe.cc\">wireframe.cc</a> and my sitemap can be seen in the image below showing the design that was planned out for the products page.</p>\n<p><img src=\"/pictures/wireframe.png\" alt=\"Wireframe for my Web Dev assignment\" /></p>\n<p>From there I was able to start the actual creation of my website. I started with creating the basic layout shown in the image above, with each different section of the page shown with different colours, those being the navbar on the left and the four quadrants that made up the main parts of the products page, I would show an image below but I forgot to take a screenshot of the page itself, and so I will just have to describe it. On top of that I created a simple Danko Logo which was just the word DANKO in a nice font, because why not, and added that into the page alongside an image for the airfryer I was going to sell, and the placement for all the elements can be seen in the sitemap above. That pretty much concludes the point I've reached now, and although it seems like it wasn't much, there was a decent amount of time taken to complete this simple page, and I'm proud of the point I'm up to.</p>\n<p><img src=\"/pictures/logo.png\" alt=\"DANKO logo\" /></p>\n<p>Looking back over my progress throughout each week makes me think I could have done better, which is something I seem to state every week, saying that I hadn't used my time to the best of my ability. This week, though, I believe that I have gotten a lot done and I am proud of what I have produced for the assignment. I possibly could have gotten more done outside of class but even when I'm at home, I need a break sometimes, whether that be taking ten to fifteen minutes to just stop and take a breath, or to go do something else that I enjoy. With all of that in mind, I produced a result that I'm proud of and was able to get through a decent chunk of the assignment this week. Now I just need to do the other four pages in this week as the assignment's all due on next Monday..</p>\n<p>That's the plan then, for this week I'm going to focus on getting through the rest of the assignment, using my time well and not getting sidetracked by other things happening around the class.</p>","preview":"<p>This past week I have been progressing through the assignment at a decent rate, getting through some of the major parts of the assignment, and starting on others. The parts I have done so far are the Wireframe, showing the basic layout of the webpage, and <em>almost</em> the Sitemap, which will show how all the different pages on the site will connect to each other. Finally I have chipped into the creation of the actual pages and am at the point where I almost have the product page complet","id":"webDevAssignment1"},{"file":"23_05_2022-webDevAssignment0.md","date":"23/05/2022","title":"# Web Dev Assignment","content":"<p>In Web Dev, I have received my assignment for creating a 5 page website for a fake product from a fake company, which is definetely not a rip-off of the company Anko called Danko. The idea of the assignment is to have any product of any category, that being kitchen appliances, toys, electronics, or literally anything that can be thought of, and developing a page to advertise or sell it, and a few more that have to do with the <em>company</em>.</p>\n<p>I haven't gotten too far into the assignment, but have already had a few ideas as to what I'm going to do in terms of the product that I will be advertising. The product I have chosen, which I might change later, is an air fryer, because I have heard a lot of good things about them and had recommendations from people who have air fryers, who cannot live without it… <em>sounds a bit like an addiction, but I won't judge it</em>. I've got to make a wireframe and sitemap for the website to show the layout plan for the website and visualise the connections from each of the webpages to each other and how they will interact with each other.</p>\n<p>The wireframe and sitemap are the minimum I have planned for this week, in hoping that I will be past that by the end of the week. Alongside that, my goal is to get a decent plan as to what I'm going to do when to get the most out of my time and create a fully functioning set of convincing web pages that act as a way to advertise and/or sell the product that I have chosen (the air fryer). I've used the time I've had this week well enough, getting ideas and different approaches into the assignment, but I still have a long way to go, and have the ability to talk to those around me when I get stuck, which will probably happen a few times, so that I can get a few different insights into ways I can approach specific problems.</p>","preview":"<p>In Web Dev, I have received my assignment for creating a 5 page website for a fake product from a fake company, which is definetely not a rip-off of the company Anko called Danko. The idea of the assignment is to have any product of any category, that being kitchen appliances, toys, electronics, or literally anything that can be thought of, and developing a page to advertise or sell it, and a few more that have to do with the <em>company</em>.</p>\n<p>I haven't gotten too far into the assig","id":"webDevAssignment0"},{"file":"16_05_2022-introJS1.md","date":"16/05/2022","title":"# Looking into more JavaScript","content":"<p>Throughout last week, I dived deeper into the world of JavaScript and how it interacts with the DOM. This can be used to create many different combinations of elements and designs to make a unique web page.</p>\n<p>For the week, I looked further into the different ways of using JavaScript. The things that I had learnt from the tutorial were able to be passed across into the another HTML document and I was able to create a simple page, in no way structured that made use of the different features that JavaScript has that allows it to interact with HTML in a useful way. A few specifics that I looked into were the functions:</p>\n<ul>\n<li><code>div.appendChild(element)</code> - Direct the specific element to become the child of a specific div container</li>\n<li><code>div.replaceChild(newElement, element)</code> - Switch out a specific element as a child for another element</li>\n<li><code>document.write(\"Lorem ipsum dolor sit amet\")</code> - Write directly on the document specific text</li>\n<li><code>element.setAttribute(\"attribute\", \"value\")</code> - Set a customisable attribute of an element</li>\n<li><code>element.style.x</code> - Change a style component, or an attribute by changing the '.style' to '.<attribute>'</li>\n</ul>\n<p>These different methods are used to be able to create different aspects of a web-page without hard coding it in, which in my mind is better, but might not be overall.</p>\n<p>I admit, I wasn't the most productive this week, although I did get a bunch done. I got sidetracked by a few things, which will be discussed more in the next post, and I was doing more work where I didn't need to. I decided to explore more out of the possibilities of the things that I <em>did</em> learn instead of experimenting with those that I <em>was</em> learning at the time. I'll make sure that throughout this week I really get back into the groove as I am receiving my assignment, and I'll attempt to get it done with good quality.</p>","preview":"<p>Throughout last week, I dived deeper into the world of JavaScript and how it interacts with the DOM. This can be used to create many different combinations of elements and designs to make a unique web page.</p>\n<p>For the week, I looked further into the different ways of using JavaScript. The things that I had learnt from the tutorial were able to be passed across into the another HTML document and I was able to create a simple page, in no way structured that made use of the different feat","id":"introJS1"},{"file":"09_05_2022-introJS0.md","date":"09/05/2022","title":"# Intro to JavaScript","content":"<p>JavaScript is an important part of Web Dev, as it allows for a lot more possibilities in what can be created for a website. As you've probably guessed, this week JavaScript was the main focus. There was a few different things that I looked into this week, those being what a DOM is and a few of the basics of JavaScript interactions with HTML.</p>\n<p>The DOM, or Document Object Model is an API the defines how an <code>html</code> or <code>xml</code> file is logically structured. The DOM can be shown quite simply as a tree diagram, with each parent having one or more children, each child having exactly one parent, except the very top parent, which tends to be the <code>&lt;HTML&gt;</code> tag. Through the use of this information, I was tasked with taking 3 web pages and creating a tree diagram showing the Document Object Model for each of them, which would show the hierarchy of classes to better visualise what the HTML was doing.</p>\n<p><img src=\"/pictures/CharlesDarwin.png\" alt=\"The First webpage's tree diagram\" />\n<img src=\"/pictures/Swagify.png\" alt=\"The Second webpage's tree diagram\" /></p>\n<p>The second thing I looked at was the actual intro to using JavaScript to interact with the DOM. This consisted of creating elements, editing elements, deleting elements and editing attributes. The way to do this was to create a function in the html file with a <code>&lt;script&gt;</code> or a JavaScript file. From there you can get an element by id or tag with <code>document.getelementbyid()</code> or <code>document.getelementbytag()</code> and then change the inner html of the element by using <code>.innerHTML = x</code> with <code>x</code> being the new data for the element. On top of just changing the elements you can also handle events such as an onClick or onHover and even onRelease. The events are fun to play around with, and I won't get into it too much in this entry, but in a nutshell you can use these events, such as onClick, so that whenever a specific element is clicked, a function will be executed, allowing for changing of elements, or running some other task.</p>\n<p>Although it isn't all new to me, I enjoyed looking into JavaScript and what a DOM is, and understand that although by themselves they don't seem too exciting, they are the fundamentals of which I will continue to build my knowledge on. Reflecting back over the week, I did well to get what I've gotten done, done, but as usual there is room for improvement, especially looking at time management. Although I did get this much done, I could've gotten more done in the time given to me, which I will continue to work on getting better with. The quality of work and learning that I have gone through has also been good, as I have enjoyed looking through the different parts of the DOM and JavaScript, and have been putting in effort into the work that needs to be produced and submitted.</p>","preview":"<p>JavaScript is an important part of Web Dev, as it allows for a lot more possibilities in what can be created for a website. As you've probably guessed, this week JavaScript was the main focus. There was a few different things that I looked into this week, those being what a DOM is and a few of the basics of JavaScript interactions with HTML.</p>\n<p>The DOM, or Document Object Model is an API the defines how an <code>html</code> or <code>xml</code> file is logically structured. The DOM can ","id":"introJS0"},{"file":"01_05_2022-creatingWebsite0.md","date":"01/05/2022","title":"# Creating a Basic Website","content":"<p>Looking back to the past two weeks of classes, excluding the school holidays which took up two weeks, I went through the process of making a basic website to show my where I am in understanding html and css, and with looking at html previously on a few occasions, it proved to be a fun little task.</p>\n<p>The website task had a few layers to it, with only ten things needed in it's criteria, those being:</p>\n<ol>\n<li>At least one example of each kind of heading</li>\n<li>At least 2 paragraphs</li>\n<li>An attached css file that modifies the two paragraphs separately and styles the headings differently</li>\n<li>An example of inline and embedded css</li>\n<li>A link to an external website</li>\n<li>A form that contains at least 5 different kind of form elements</li>\n<li>An image</li>\n<li>A change in alignment with CSS</li>\n<li>A navbar with dropdown menus and changed opacity</li>\n<li>A table with tabular data</li>\n</ol>\n<p>The page looked like a throw-away page to say the least, with all six headings at the top, each being named and with a different style of underline for each, and both paragraphs having a border around it with filler text, that being the <code>lorem ipsum</code> text that is well known for appearing in templates to show how text would look. On a sidenote, when looking into the creating the website in the first week, we looked into what <code>lorem ipsum dolor sit amet</code> actually meant, and were able to find that the direct translation was actually <code>The pain itself is love</code> in Latin, and then a lot of other repeated text in other sequences, as it is filler text with no real meaning.</p>\n<p>On top of that, there was a basic navbar at the top with a dropdown that held three links, labelled as <code>Door 1</code>, <code>Door 2</code>, and <code>Door 3</code>, and dropdown which linked to another page with text saying that it was a page only intended to add to the page count, and held no other significance. Below the navbar and paragraphs was also a form, containing a few bits and pieces of the elements with a text input, a radio button, a submit button, a date picker, a slider and a file picker, which prove to be of no use, as the data put in doesn't save.</p>\n<p>Finally down the bottom, there was an image of the skeleton of an Elephant bird with alt text, and a table of data which is continuously changing numbers with the titles \"Grades\", where the numbers are random integers between 0 and 100, and \"Hours of sleep per night\", which are random floats between 0.01 and 1</p>\n<p>The two weeks flew by with the creation of the website as it provided a fun little project with a little bit of Javascript thrown in there too. I believe that although I got through it pretty fast, it probably wasn't fast enough as it covered the basics of HTML and JS and I still took twice as long as it should've taken. Despite that though I was able to power through it, putting in my best work for not the best web page that actually doesn't look too bad. I also spoke with Michael about a few things while doing the project to see what I could do better or find ideas of what to put into the page and created a better one because of it. Through all of the fun that it was, I managed to develop further my understanding of using HTML and JS in creating a webpage and will be able to use these skills in the future.</p>","preview":"<p>Looking back to the past two weeks of classes, excluding the school holidays which took up two weeks, I went through the process of making a basic website to show my where I am in understanding html and css, and with looking at html previously on a few occasions, it proved to be a fun little task.</p>\n<p>The website task had a few layers to it, with only ten things needed in it's criteria, those being:</p>\n<ol>\n<li>At least one example of each kind of heading</li>\n<li>At least 2 paragraphs","id":"creatingWebsite0"},{"file":"03_04_2022-w3cAssignment.md","date":"03/04/2022","title":"# The W3C Research Report","content":"<p>The W3C, or the World Wide Web consortium is an international community that works on building towards a long term goal of making the web accessible to everyone in the world. Their aim is to enable participation from everyone in the world on the web and to allow for ease of transferring information online. This week, I looked into The W3C for the web dev assignment, and how the W3C has affected the world we live in and the way that we access the internet.</p>\n<p>The W3C started in 1994 by Sir Tim Berners-Lee, who realised that finding and transferring information was just too difficult as it would require using different applications to do different things, and those applications would only be compatible with certain computers, leading to a lot of difficulty if you needed to access 2 seperate sets of information from 2 seperate applications that worked on 2 seperate computers, <em>I think you get where I'm going with that</em>. The point is, it was a pain to access information if you needed to access them from different applications that are incompatible with their counterparts hardware. This sparked the idea of creating a standardised set of regulations that enforced everyone to use the same format and would be able to be read by a browser that was compatible with their hardware.</p>\n<p>From there the W3C evolved to create more standards and HTML which would get updated every so often and become a larger organisation to work with many different businesses and organisations throughout the world. This non-centralised system allowed for an uncontrolled set of regulations that everyone abides by to create a more inclusive world wide web, and further their vision of making the Web accessible to everyone in the world.</p>\n<p>Reflecting back I believe that I did well to research and start the W3C task for web dev, as I did a lot of research and categorised the information, sorting and formatting to make my life easier in answering the questions when I needed to write the report. In future though I will start my assignment earlier as I believe I still didn't leave myself enough time to do the assignment to adequate quality.</p>","preview":"<p>The W3C, or the World Wide Web consortium is an international community that works on building towards a long term goal of making the web accessible to everyone in the world. Their aim is to enable participation from everyone in the world on the web and to allow for ease of transferring information online. This week, I looked into The W3C for the web dev assignment, and how the W3C has affected the world we live in and the way that we access the internet.</p>\n<p>The W3C started in 1994 by ","id":"w3cAssignment"},{"file":"27_03_2022-dataEthics1.md","date":"27/03/2022","title":"# Finishing Ethics in Data ","content":"<p>Due to not finishing the Ethics in Data work in the previous week, I had to do a bit of work researching the rest of the RoboDebt scheme to write up the ~250-word overview of what the scheme was, what was wrong with it, and how it dealt with data morally and ethically.</p>\n<p>As stated in the previous post, the RoboDebt algorithm was used to identify any overpayments or debts of a person by comparing Centrelink payments with averaged income reports from the ATO. The scheme was an automated version of a manual process that identified these debts but lacked pattern recognition in names that would find similarities and assume that names like \"Fred's Breads\", \"Freds Breads\", \"FRED'S BREADS\", and \"Bready Fred trading as Fred's Breads\" would all probably be the same company all formatted differently. Overall, the scheme had good intentions, but was under-developed and missing some of the core components that would allow it to avoid the crucial mistakes it ran into, which was misidentifying debts and overpayments, giving people higher debts than they actually had. I covered that there was no moral dilemma with the scheme, but ethically there was due to the automated process being under-tested before the deployment which is where these issues could have been picked up and fixed before affecting the general population in a negative way as it did.</p>\n<p>Reflecting back on the week, I did decently in going through the content I needed to go through and complete, and I did it with minimal distractions to myself. One of the things I picked up though, was that I am <em>slightly</em> distracting to those around me, as I caught myself a few times talking to people who were doing their work and pulling them away from what they were doing. This is a great problem as I need to make sure that I get my work done, but also allow for everyone else to get their work done, as the world doesn't revolve around me, and so my goal for this week is to be as little of a distraction as I can, or preferably, not a distraction at all so that people can get what they need to do.</p>","preview":"<p>Due to not finishing the Ethics in Data work in the previous week, I had to do a bit of work researching the rest of the RoboDebt scheme to write up the ~250-word overview of what the scheme was, what was wrong with it, and how it dealt with data morally and ethically.</p>\n<p>As stated in the previous post, the RoboDebt algorithm was used to identify any overpayments or debts of a person by comparing Centrelink payments with averaged income reports from the ATO. The scheme was an automated","id":"dataEthics1"},{"file":"20_03_2022-regex0.md","date":"20/03/2022","title":"# Regex","content":"<p>In web dev, we're technically meant to be up to the Internet and W3C task, but I finished it last week, so I did an extension task, Regex. From what I learnt, regex has to do with common terms/expressions that can be used to searched through a file or list of words that allows for easier searching of terms or expressions.</p>\n<p>For this we had to install GREP which gave us access to these features. GREP allowed us to use regex and search through a words.txt file, which gave us a massive file filled with just words all sorted alphabetically (Like a dictionary of words). From there I went through and tested how it worked, and how I can use it. Some of the things I discovered was the special characters, one of which was <code>^</code> which is used at the start of the term to say it must start with whatever comes after, e.g. <code>grep '^dog' words.txt</code> will give me all words that start with 'dog' while <code>grep 'dog' words.txt</code> would give me all words that have 'dog' in it. Secondly, there is the character <code>$</code> which can be used at the end to signify that is must end with the expression, e.g. <code>grep 'dog$' words.txt</code> will give me all words that end with dog, and <code>grep '^dog$' words.txt</code> will give the exact line. This wouldn't be too helpful without one last thing, using <code>.</code> would make  a fill-in, meaning that it would find all words matching the expression, and if it has any letter in that location, it will return the word, e.g. <code>grep 'ˆt.....o$' words.txt</code> would give <code>tattoo, tomato</code> as it would fill in the blank and return the words that would work with the expression.</p>\n<p>There is more, but I didn't go too far into it as I read through parts of the pdf that I didn't need ot read which all reinforced those past few points.</p>\n<p>This week was successful for learning some things about regex and ethics in data (next post), as I bleieve I was able to learn it better than some other things in the past due to the interactive nature of regex, using grep and a words file that taught about the possibilities of regex and how it can be used in many scenarios to make life easier. Besides that I had Morgan and Michael around who I was able to ask if I was having issues with any of the code, and so they gave me a bit more to work with if I ever got stuck.</p>","preview":"<p>In web dev, we're technically meant to be up to the Internet and W3C task, but I finished it last week, so I did an extension task, Regex. From what I learnt, regex has to do with common terms/expressions that can be used to searched through a file or list of words that allows for easier searching of terms or expressions.</p>\n<p>For this we had to install GREP which gave us access to these features. GREP allowed us to use regex and search through a words.txt file, which gave us a massive f","id":"regex0"},{"file":"13_03_2022-iW3C1.md","date":"13/03/2022","title":"# The Internet and W3C","content":"<p>This week in web dev, I kept looking through the Internet and W3C task, which was mainly focused around the basics of how the internet works and what the W3C is and how it affect the internet to this day. Building on what was said last time in the web dev post, I went through a document of how the internet sends and receives information from places. This starts in a computer, gets compressed and turned into packets and sent through a range of different locations to get to the end destination, which will then be unpacked and decompressed etc to be able to be seen on the other side.</p>\n<p>A way of visualising what is happening in some of the steps, we ran some commands through the command prompt, those being:</p>\n<ul>\n<li><code>ping</code></li>\n<li><code>tracert</code>\nWith <code>ping</code> showing packets being sent and time it takes to receive a response to a certain destination and <code>tracert</code> showing the exact path that the packets take, through each stop along the way, to get to the end destination. There were a few other things that the document told me to run, but they seemed to be built for Windows 95/NT, thus I skipped those and just went through understanding what they were trying to talk about.</li>\n</ul>\n<p>The second half of the task was looking at the W3C or World Wide Web Consortium, where I had to look at who they are, their purpose, how they achieve their goal and how effective they are at achieving their goal. In a nutshell: the W3C is the World Wide Web Consortium, it was started in 1994 and their goal is to develop a set of standards and guidelines on the internet that give access to the internet to anyone, using any software or hardware, anywhere in the world, and for those that don't go by the standards of the W3C, they will have slower connections and incompatibility with some browsers and most search engines.</p>\n<p>Overall in terms of going through and learning the information from the task went well, although I did get sidetracked a few times this week which had me falling a bit behind in the task, but by the end of the week I caught up enough to have enough information to write this post, and give an overview of what I learnt throughout the week and how I went learning it throughout the week. Next week though, I will focus on making sure that I won't get as sidetracked in the task and that I will keep on track to get the task done.</p>","preview":"<p>This week in web dev, I kept looking through the Internet and W3C task, which was mainly focused around the basics of how the internet works and what the W3C is and how it affect the internet to this day. Building on what was said last time in the web dev post, I went through a document of how the internet sends and receives information from places. This starts in a computer, gets compressed and turned into packets and sent through a range of different locations to get to the end destinati","id":"iW3C1"},{"file":"06_03_2022-iW3C0.md","date":"06/03/2022","title":"# The Internet and the W3C - Research and understanding","content":"<p>For the last part of the week, being not very long at all, I started having a look into the internet and how it works (Turns out it isn't magic…). The website at first glance looked like a long read, and when I looked closer, realised I was right, but it was a good one as it provided useful and accurate information.</p>\n<p>I got through about a quarter of the <a href=\"http://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm\">page</a> before the week ended and I learnt much about the infrastructure of the internet and how information is transported from one place to another through the internet, what protocol stacks and packets are, and how the commands <code>ping</code> and <code>tracert</code> work.</p>\n<p>In a nutshell:</p>\n<ul>\n<li><code>ping</code> sends a message to another computer and counts how long until a reply is received (or timed out)</li>\n<li><code>tracert</code> shows the path that is taken by your packets to a destination</li>\n<li>Protocol Stacks and Packets are the steps taken for your computer to encode/decode and create a sendable message to the other computer</li>\n</ul>\n<p>Although this is only a small amount that I have read this week, I will read more about it next week and mess around with it to get a greater understanding of how the internet works to send and receive information from different sources, like how you're reading this blog post right now, there was a lot of stuff happening to get this page on your screen to read what I have to say about what I'm learning.</p>\n<p>Sorry that this is only a short blog post, but there wasn't too much to look at in terms of the amount of research I was able to do in the time period. In retrospect I could've looked at more information outside of class and been ahead of the work. Then again, either way I'm going to go through the information and read and understand it. All in all though, this is a nice start to the specific Web Dev course and is providing a useful starting point to what I need to know for Web Dev.</p>","preview":"<p>For the last part of the week, being not very long at all, I started having a look into the internet and how it works (Turns out it isn't magic…). The website at first glance looked like a long read, and when I looked closer, realised I was right, but it was a good one as it provided useful and accurate information.</p>\n<p>I got through about a quarter of the <a href=\"http://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm\">page</a> before the week ended an","id":"iW3C0"},{"file":"27_02_2022-LGC1.md","date":"27/02/2022","title":"# Logic Circuits and Object Oriented Programming - Creating a logic circuit","content":"<p>Creating the circuit was quite interesting as it required an understanding of JK Flip Flops, which was a new type of flip flop I hadn't learnt about. It also required reading viewing a logic circuit diagram and modifying it slightly so that it had the correct layout and didn't contain unnecessary parts. Initially I decided to just use the original diagram and take out the unnecessary components in my head and write it all in code, but that created a few bugs in the code, and so I got the right version of the circuit diagram drawn down and used that to make sure I had the right layout in code.</p>\n<p>Original Diagram:</p>\n<p><img src=\"/pictures/buttonDiagram.png\" alt=\"Original Diagram\" /> </p>\n<p>Updated Diagram:</p>\n<p><img src=\"/pictures/buttonDiagramUpdated.png\" alt=\"Updated Diagram\" /></p>\n<p>The program still isn't finished and has a few errors in it, including the famous Recursion Error, that is often gotten from flip flops, or having two gates requiring the outputs of each other for their individual inputs. All in all, there is still a lot to get through, and although this task does have some annoying errors, they only require a bit of logical-thinking to figure out where they're coming from, encouraging the use of problem solving skills and logical thinking.</p>\n<p>I feel This week I have been able to understand and put into use the skills of using Object Oriented Programming and creating Logic Circuits well, and not just do a straight forward task, but instead a task that requires learning something and putting it to use. Overall, the content of this week brought challenges that enhanced my problem solving and logical thinking skills as well as my general understanding of the content covered in I.T. this week.</p>\n<pre><code class=\"python language-python\">...\n    # JK Flip Flop Black-boxed Logic\n    def performGateLogic(self):\n        if not self.requested:\n            if self.getPinJ() == 1:\n                self.q = 1 if self.q == 0 else 1\n            elif self.getPinK() == 1:\n                self.q = 0 if self.q == 1 else 0\n            print(self.q)\n            self.requested = True\n        return self.q\n...\n\n# Main process\ndef main():\n    JKFFT = JKFlipFlop(\"JKFF_Top\")\n    JKFFB = JKFlipFlop(\"JKFF_Bottom\")\n    AndG1 = AndGate(\"AndG1\")\n    AndG2 = AndGate(\"AndG2\")\n    AndG3 = AndGate(\"AndG3\")\n    NotG1 = NotGate(\"NotG1\")\n    NotG2 = NotGate(\"NotG2\")\n    Sw = Switch(\"Switch\")\n    Pw = Power(\"Power\")\n    Sw_AndG1 = Connector(Sw,AndG1)\n    JKFFB_AndG1 = Connector(JKFFB,AndG1)\n    Sw_NotG1 = Connector(Sw,NotG1)\n    AndG1_JKFFT = Connector(AndG1,JKFFT)\n    NotG1_JKFFT = Connector(NotG1,JKFFT)\n    JKFFTnQ_NotG2 = Connector(JKFFT,NotG2)\n    NotG2_AndG2 = Connector(NotG2, AndG2)\n    Sw_AndG2 = Connector(Sw, AndG2)\n    AndG2_JKFFB = Connector(AndG2, JKFFB)\n    Pw_JKFFB = Connector(Pw, JKFFB)\n    NotG2_AndG3 = Connector(NotG2, AndG3)\n    JKFFB_AndG3 = Connector(JKFFB, AndG3)\n    # Simulate clock cycle\n    while True:\n        print(AndG3.getOutput())\n        JKFFB.requested = False\n        JKFFT.requested = False\n</code></pre>","preview":"<p>Creating the circuit was quite interesting as it required an understanding of JK Flip Flops, which was a new type of flip flop I hadn't learnt about. It also required reading viewing a logic circuit diagram and modifying it slightly so that it had the correct layout and didn't contain unnecessary parts. Initially I decided to just use the original diagram and take out the unnecessary components in my head and write it all in code, but that created a few bugs in the code, and so I got the r","id":"LGC1"},{"file":"18_02_2022-LGC0.md","date":"18/02/2022","title":"# Logic Gates and Circuits","content":"<p>In retrospect, my learning and understanding in tbat scenario possibly could have been better, and that will be something I work on, making sure to explore things I don't understand from a range of sources and interpretations to attempt to get an in-depth understanding of how the specific Logic Circuits work.</p>\n<p><img src=\"/pictures/tff.png\" alt=\"T-Flip-Flop\" /></p>","preview":"<p>In retrospect, my learning and understanding in tbat scenario possibly could have been better, and that will be something I work on, making sure to explore things I don't understand from a range of sources and interpretations to attempt to get an in-depth understanding of how the specific Logic Circuits work.</p>\n<p><br><a href=\"/pictures/tff.png\" alt=\"T-Flip-Flop\"><i>Image</i></a>","id":"LGC0"}]}